<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % images_ent SYSTEM "images.ent"> 
  %images_ent;
] >
<book lang="en">
  <bookinfo>
    <title>TorqueBox Getting Started Guide</title>

    <releaseinfo>${project.version}</releaseinfo>

    <authorgroup>
      <corpauthor>The TorqueBox Project</corpauthor>
    </authorgroup>
  </bookinfo>

  <toc></toc>

  <chapter>
    <title>Installation</title>

    <section>
      <title>Installation on Linux and Mac</title>

      <para></para>
    </section>

    <section>
      <title>Installation on Windows</title>

      <para></para>
    </section>

    <section>
      <title>Installation with RVM</title>

      <para>
        Ensure you have a recent JRuby installed then install the
        <varname>torquebox-server</varname> gem into the global gemset.

        <screen><prompt>$</prompt> <command>rvm install jruby-${version.jruby}</command>
<prompt>$</prompt> <command>rvm use jruby-${version.jruby}@global</command>
<prompt>$</prompt> <command>gem install torquebox-server</command>
</screen>
      </para>

      <para>
        If using bundler, ensure <varname>torquebox</varname> is in
        the Gemfile for all projects.
      </para>

      <para>
        If you use project-specific gemsets then you'll also need to
        ensure <varname>torquebox-server</varname> is in the Gemfile
        for each project if you plan to use the
        <command>torquebox</command> command.
      </para>

      <para>
        If you plan to deploy multiple applications to TorqueBox, then
        always start TorqueBox from the global gemset and add
        <varname>GEM_HOME</varname> and <varname>GEM_PATH</varname> to
        the environment section of your
        <filename>torquebox.rb</filename> file pointing to the
        project-specific gemset. Note that even if you've chosen to
        use <filename>torquebox.yml</filename> instead of
        <filename>torquebox.rb</filename>, you'll still want to add a
        <filename>torquebox.rb</filename> just for setting the
        environment section since it can create relative paths by
        evaluating the existing <varname>rvm_path</varname>
        environment variable.
      </para>

      <para>
        Example <filename>torquebox.rb</filename> for a project using
        the project_foo gemset:

        <informalexample><programlisting>
TorqueBox.configure do
  environment do
    GEM_HOME "#{ENV['rvm_path']}/gems/jruby-${version.jruby}@project_foo"
    GEM_PATH "#{ENV['rvm_path']}/gems/jruby-${version.jruby}@project_foo:#{ENV['rvm_path']}/gems/jruby-${version.jruby}@global"
  end
end
        </programlisting></informalexample>
      </para>
    </section>
  </chapter>

  <chapter>
    <title>Creating Your First Application</title>

    <para></para>
  </chapter>

  <chapter>
    <title>Add some more torquebox features to the app</title>

    <para></para>
  </chapter>

  <chapter>
    <title>Converting Existing Applications to JRuby and TorqueBox</title>

    <para></para>
  </chapter>

</book>
